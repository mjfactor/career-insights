name: Keep Services Alive

on:
  schedule:
    # Run every 4 days at 2 AM UTC
    - cron: "0 2 */4 * *"
  workflow_dispatch:

jobs:
  ping-services:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DIRECT_URL: ${{ secrets.DIRECT_URL }}
      UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
      UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}

    steps:
      - name: Ping Supabase (REST)
        run: |
          echo "Pinging Supabase REST..."
          response=$(curl -s -w "%{http_code}" \
            -X POST \
            -H "Content-Type: application/json" \
            -H "apikey: $SUPABASE_ANON_KEY" \
            -H "Authorization: Bearer $SUPABASE_ANON_KEY" \
            -d '{}' \
            "$SUPABASE_URL/rest/v1/rpc/health_check" \
            -o /tmp/supabase_response.json)

          if [ "$response" = "200" ]; then
            echo "‚úÖ Supabase REST ping successful"
          else
            echo "‚ùå Supabase REST ping failed (HTTP $response)"
            cat /tmp/supabase_response.json || echo "No response"
          fi
        continue-on-error: true

      - name: Ping Supabase (Direct DB)
        run: |
          echo "Pinging Supabase DB..."
          sudo apt-get update && sudo apt-get install -y postgresql-client
          if echo "SELECT 1;" | psql "$DIRECT_URL" -t --set=sslmode=require; then
            echo "‚úÖ Supabase DB connection successful"
          else
            echo "‚ùå Supabase DB connection failed"
          fi
        continue-on-error: true

      - name: Ping Upstash Redis
        run: |
          echo "Pinging Upstash Redis..."
          response=$(curl -s -w "%{http_code}" \
            -X POST \
            -H "Authorization: Bearer $UPSTASH_REDIS_REST_TOKEN" \
            -d '["PING"]' \
            "$UPSTASH_REDIS_REST_URL" \
            -o /tmp/redis_response.json)

          if [ "$response" = "200" ]; then
            echo "‚úÖ Redis ping successful"
            cat /tmp/redis_response.json
          else
            echo "‚ùå Redis ping failed (HTTP $response)"
            cat /tmp/redis_response.json || echo "No response"
          fi
        continue-on-error: true

      - name: Summary
        run: |
          echo "üèÅ Workflow completed ‚Äî services pinged to stay alive"
